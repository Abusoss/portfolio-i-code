services:
  router:
    image: traefik:v3.0
    container_name: "router"
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro        # It's not recommended mounting the docker socket into a container -> see https://github.com/wollomatic/traefik2-hardened
      - ./config/traefik.yml:/etc/traefik/traefik.yml:ro  # static traefik configuration
      - ./config/dynamic.yml:/etc/traefik/dynamic.yml:ro  # dynamic traefik configuration
      # - ./config/acme.json:/etc/traefik/acme.json           # TLS certificate storage
    networks:
      - traefik-net
    restart: always
    labels:
      - "traefik.enable=true"

      # define basic auth middleware for dashboard
      - "traefik.http.middlewares.router-auth.basicauth.removeheader=true"
      - "traefik.http.middlewares.router-auth.basicauth.users=admin:{BASIC_AUTH_PASSWORD}" # CHANGE PASSWORD!! (user: foobar / pwd: foobar)
      # how to set a real password:
      # sudo apt-get install apache2-utils
      # htpasswd -Bnb username password | sed -e s/\\$/\\$\\$/g

      # define traefik dashboard router and service
      - "traefik.http.routers.router.rule=Host(`router.i-code.xyz`) || Host(`www.router.i-code.xyz`)"
      - "traefik.http.routers.router.service=api@internal"
      # - "traefik.http.routers.router.tls.certresolver=tlschallenge"
      - "traefik.http.routers.router.entrypoints=web"
      - "traefik.http.routers.router.middlewares=router-auth, secHeaders@file, autodetectContenttype@file"
      - "traefik.http.services.router.loadbalancer.server.port=8080"

  api:
    build:
      context: ./directus
      dockerfile: Dockerfile
    image: directus/directus:10.11.0
    env_file:
      - .env
    container_name: "api"
    restart: on-failure
    ports:
      - "8055:8055"
    environment:
      HOST: 0.0.0.0
      PORT: 8055
      PUBLIC_URL: "https://api.i-code.xyz"
      DB_SSL: "true"
      # SSL_ENABLED: "true"
      # SSL_CERT_FILE: /letsencrypt/live/api.i-code.xyz/fullchain.pem
      # SSL_KEY_FILE: /letsencrypt/live/api.i-code.xyz/privkey.pem
      RATE_LIMITER_ENABLED: "false"
      RATE_LIMITER_STORE: "memory"
      RATE_LIMITER_POINTS: 25
      RATE_LIMITER_DURATION: 1
      CACHE_ENABLED: "false"
      CACHE_AUTO_PURGE: "true"
      CACHE_AUTO_PURGE_IGNORE_LIST: "directus_activity,directus_presets"
      CACHE_STORE: "memory"
      ASSETS_CACHE_TTL: "1d"
      STORAGE_LOCATIONS: "Cloudinary"
      STORAGE_CLOUDINARY_DRIVER: "cloudinary"
      ACCESS_TOKEN_TTL: "15m"
      SESSION_COOKIE_NAME: "directus_session_token"
      SESSION_COOKIE_SAME_SITE: "lax"
      SESSION_COOKIE_SECURE: "false"
      SESSION_COOKIE_TTL: "1d"
      REFRESH_TOKEN_TTL: "7d"
      REFRESH_TOKEN_COOKIE_SECURE: "false"
      REFRESH_TOKEN_COOKIE_SAME_SITE: "lax"
      REFRESH_TOKEN_COOKIE_NAME: "directus_refresh_token"
      CORS_ENABLED: "true"
      KEY: "${KEY_DIRECTUS}"
      SECRET: "${SECRET_DIRECTUS}"
      CORS_ORIGIN: "*"
      CORS_METHODS: "GET,POST,PATCH,DELETE"
      CORS_ALLOWED_HEADERS: "Content-Type,Authorization"
      CORS_EXPOSED_HEADERS: "Content-Range"
      CORS_CREDENTIALS: "true"
      CORS_MAX_AGE: 18000
      EXTENSIONS_PATH: "./extensions"
      EXTENSIONS_AUTO_RELOAD: "true"
      EMAIL_ALLOW_GUEST_SEND: "false"
      EMAIL_VERIFY_SETUP: "true"
      TELEMETRY: "false"
      GRAPHQL_INTROSPECTION: "true"
      CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_SRC: "i-code.xyz"
    depends_on:
      - router
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`api.i-code.xyz`) || Host(`www.api.i-code.xyz`)"
      # - "traefik.http.routers.api.tls=true"
      # - "traefik.http.routers.api.tls.certresolver=tlschallenge"
      - "traefik.http.routers.api.middlewares=secHeaders@file"
      - "traefik.http.services.api.loadbalancer.server.port=80" # set port the container listenes to (not the exposed port)

networks:
  traefik-net:
    external: true
    name: traefik-net # create this network before running this deployment:
# docker network create traefik-net