version: "3.8"
services:
  router:
    image: traefik:v3.0
    container_name: "router"
    ports:
      - "80:80"
      - "8080"
    volumes:
      - "./traefik.yml:/etc/traefik/traefik.yml"
      - "/letsencrypt:/letsencrypt"
      - "/var/log/eb-docker/containers/router:/log"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik-net
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`router.i-code.xyz`)"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=router:$$2a$$12$$zyvnjJmBpKQKXWXpvLObRuz74eVmBCV4lR3GWzbRoYpyGJvAN0bNO"
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: directus/directus:10.11.1
    container_name: api
    restart: on-failure
    ports:
      - "8055:8055"
    environment:
      HOST: "0.0.0.0"
      PORT: 8055
      PUBLIC_URL: "http://api.i-code.xyz/"
      DB_CLIENT: "pg"
      DB_HOST: "eu-west-1.sql.xata.sh"
      DB_PORT: "5432"
      DB_DATABASE: "i-code_database"
      DB_USER: "cs9f4n"
      DB_PASSWORD: "xau_RwyjRojJyhu1iiKaIW83R4j9zST8KUXY1"
      DB_SSL: "true"
      RATE_LIMITER_ENABLED: false
      RATE_LIMITER_STORE: "memory"
      RATE_LIMITER_POINTS: 25
      RATE_LIMITER_DURATION: 1
      CACHE_ENABLED: false
      CACHE_AUTO_PURGE: true
      CACHE_AUTO_PURGE_IGNORE_LIST: "directus_activity,directus_presets"
      CACHE_STORE: "memory"
      ASSETS_CACHE_TTL: "1d"
      STORAGE_LOCATIONS: "Cloudinary"
      STORAGE_CLOUDINARY_DRIVER: "cloudinary"
      STORAGE_CLOUDINARY_ROOT: "./uploads"
      STORAGE_CLOUDINARY_CLOUD_NAME: "do9jfuuqy"
      STORAGE_CLOUDINARY_API_KEY: "845463472996127"
      STORAGE_CLOUDINARY_API_SECRET: "ekZk30rgm4l992nqtjl8yXZYEjI"
      STORAGE_CLOUDINARY_ACCESS_MODE: "public"
      KEY: "b8076701-4b1a-42ca-9aa5-ed9b727a85ba"
      SECRET: "Hqr9EhcxO81zq0ewWJoHHMY73s-ZCJQp"
      ACCESS_TOKEN_TTL: "15m"
      SESSION_COOKIE_NAME: "directus_session_token"
      SESSION_COOKIE_SAME_SITE: "lax"
      SESSION_COOKIE_SECURE: false
      SESSION_COOKIE_TTL: "1d"
      REFRESH_TOKEN_TTL: "7d"
      REFRESH_TOKEN_COOKIE_SECURE: false
      REFRESH_TOKEN_COOKIE_SAME_SITE: "lax"
      REFRESH_TOKEN_COOKIE_NAME: "directus_refresh_token"
      CORS_ENABLED: "true"
      # CORS_ORIGIN: https://vivoinparis.com, https://api.vivoinparis.com,
      CORS_ORIGIN: "*"
      CORS_METHODS: "GET,POST,PATCH,DELETE"
      CORS_ALLOWED_HEADERS: "Content-Type,Authorization"
      CORS_EXPOSED_HEADERS: "Content-Range"
      CORS_CREDENTIALS: "true"
      CORS_MAX_AGE: 18000
      EXTENSIONS_PATH: "./extensions"
      EXTENSIONS_AUTO_RELOAD: "false"
      EMAIL_FROM: "m.loulou9311@gmail.com"
      EMAIL_ALLOW_GUEST_SEND: "false"
      EMAIL_VERIFY_SETUP: "true"
      TELEMETRY: "false"
      GRAPHQL_INTROSPECTION: "true"
      CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_SRC: "https://i-code.xyz, http://api.i-code.xyz"
    # volumes:
      # By default, uploads are stored in /directus/uploads
      # Always make sure your volumes matches the storage root when using
      # local driver
      # - ./uploads:/api/uploads
      # Make sure to also mount the volume when using SQLite
      # - ./database:/directus/database
      # If you want to load extensions from the host
      # - ./api/extensions:/api/extensions:rw
      # - ./eu-west-3-bundle.pem:/api/eu-west-3-bundle.pem:rw
    depends_on:
      - router
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true" # Activer Traefik pour router le trafic vers ce conteneur
      # - "traefik.http.services.app.loadbalancer.passhostheader=true"
      - "traefik.http.services.api.loadbalancer.server.port=8055"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.passhostheader=true"
      - "traefik.http.routers.api.rule=Host(`api.i-code.xyz`)" # Hôte défini
      # - "traefik.http.routers.api.middlewares=api-auth"
      # - "traefik.http.middlewares.api-auth.basicauth.users=router:$$2a$$12$$zyvnjJmBpKQKXWXpvLObRuz74eVmBCV4lR3GWzbRoYpyGJvAN0bNO"
      # - "traefik.http.routers.app.entrypoints=web"
      # - "traefik.http.routers.app.domains[0].main=*.${HOST}"
      # - "traefik.http.routers.app.tls.domains[0].san=${HOST}"
      # - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.tls=false"
            # Redirect "www.my-company.com" to "my-company.com":
      - "traefik.docker.network=traefik-net"
      # - "traefik.enable=true" # Activer Traefik pour router le trafic vers ce conteneur
      # - "traefik.docker.network=traefik-net"
      # - "traefik.http.routers.api.entrypoints=websecure"
      # - "traefik.http.routers.api.tls.certresolver=myresolver"
      # - "traefik.http.routers.api.entrypoints=web"
      # - "traefik.http.routers.api.rule=Host(`api.${HOST}`, `www.api.${HOST}`)" # Hôte défini
      # Redirect "www.my-company.com" to "my-company.com":
      # - "traefik.http.routers.api.middlewares=api-redirect-www"
      # - "traefik.http.middlewares.api-redirect-www.redirectregex.regex=^http://www.api.${HOST}/(.*)"
      # - "traefik.http.middlewares.api-redirect-www.redirectregex.replacement=http://api.${HOST}/$${1}"
      # - "traefik.http.middlewares.api-redirect-www.redirectregex.permanent=true"
      # - "traefik.http.services.api.loadbalancer.server.port=8055"
networks:
  traefik-net:
    name: traefik-net