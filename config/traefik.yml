api:
  dashboard: true
  insecure: true

entryPoints:
  web:
    address: ':80' # http
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    address: ':443' # https

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    watch: true
    network: "traefik-net"
    exposedByDefault: false
  file:
    filename: /etc/traefik/dynamic.yaml
    watch: true

# serversTransport:
#   insecureSkipVerify: true

# certificatesResolvers:
#   letsencrypt:
#     acme:
#       email: m.loulou9311@gmail.com
#       storage: "/letsencrypt/acme.json"
#       httpChallenge:
#         entryPoint: web

certificatesResolvers:
  tlschallenge:
    acme:
      # caServer: https://acme-staging-v02.api.letsencrypt.org/directory # IMPORTANT: uncomment this line to get production ready certificates. After this, clear acme.json file.
      email: m.loulou9311@gmail.com
      storage: /letsencrypt/acme.json # chmod 600 this file on the host system
      tlsChallenge: {}
global:
  checkNewVersion: true
  sendAnonymousUsage: false # disable this if you don't want to send anonymous usage data to traefik
# http:
#   routers:
#     api-router:
#       rule: "Host(`api.i-code.xyz`) || Host(`www.api.i-code.xyz`)"
#       entryPoints:
#         - websecure
#       service: api-service
#       tls:
#         certResolver: letsencrypt

#     acme-http:
#       rule: "PathPrefix(`/.well-known/acme-challenge/`)"
#       entryPoints:
#         - web
#       service: acme-http@internal
#       priority: 10000

#     router-router:
#       rule: "Host(`router.i-code.xyz`) || Host(`www.router.i-code.xyz`)"
#       entryPoints:
#         - websecure
#       service: api@internal
#       tls:
#         certResolver: letsencrypt

#   services:
#     api-service:
#       loadBalancer:
#         servers:
#           - url: "http://api:8055"